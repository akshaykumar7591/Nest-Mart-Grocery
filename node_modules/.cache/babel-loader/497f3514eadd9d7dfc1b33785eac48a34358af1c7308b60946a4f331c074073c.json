{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n// Aliases\nconst abs = Math.abs;\nconst float = parseFloat; // Values\n\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex'; // Data Attributes\n\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.firstCall = true;\n    this.isControlled = false;\n    this.externalInput = false;\n    this.isComponentMounted = false;\n    this.lastValueProp = [];\n  }\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      this.value = this.setMinMaxProps(); // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n\n      this.index = this.setMinMaxProps(0, 1); // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps(); // Slidable range limits (when a thumb is dragged)\n\n      this.rangeLimits = this.setMinMaxProps(); // Slider value depending on the user interaction\n\n      this.sliderValue = this.setMinMaxProps(); // For dragging thumbs and range\n\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0; // initial\n\n      this.reset(); // Add listeners to element\n\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      }); // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      }); // Add listeners to range\n\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      }); // Define and add global listeners\n\n      this.pointerMoveEvent = e => {\n        this.drag(e);\n      };\n      this.pointerUpEvent = () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      };\n      this.resizeEvent = () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      };\n      this.addNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n      this.addNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n      this.addNodeEventListener(window, 'resize', this.resizeEvent);\n      this.isComponentMounted = true;\n    }\n  }\n  componentDidUpdate() {\n    this.reset();\n  }\n  componentWillUnmount() {\n    // Remove global listeners\n    this.removeNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n    this.removeNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n    this.removeNodeEventListener(window, 'resize', this.resizeEvent);\n    this.isComponentMounted = false;\n  }\n  reset() {\n    this.isControlled = !!this.props.value;\n    if (this.isControlled) {\n      if (this.firstCall || this.props.value !== this.lastValueProp) {\n        this.firstCall = false;\n        this.externalInput = true;\n      }\n      this.lastValueProp = this.props.value;\n    }\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n  }\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n  removeNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.removeEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  } // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n\n  safeMinMaxValues() {\n    let error = false;\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  } // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    } // Boolean Values\n\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  } // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Current value as set in the input elements\n    // which could change while changing min, max and step values\n    const currentValue = this.setMinMaxProps(this.input[0].current.value, this.input[1].current.value); // var value is synced with the values set in the input elements if no newValue is passed\n\n    newValue = newValue || currentValue;\n    this.input[this.index.min].current.value = newValue.min;\n    this.input[this.index.max].current.value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues(); // Check if the thumbs cross each other\n\n    if (this.value.min > this.value.max) {\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max; // Switch thumb attributes\n\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER); // Switch thumb drag labels\n\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n      this.syncValues();\n    }\n    this.sliderValue = forceSet ? this.value : newValue;\n    let valueSet = false;\n    if (currentValue.min !== this.input[0].current.value || forceSet) {\n      valueSet = true;\n    }\n    if (currentValue.max !== this.input[1].current.value || forceSet) {\n      valueSet = true;\n    } // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n      if (!this.isControlled || this.externalInput) {\n        this.externalInput = false;\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n        this.updateAriaValueAttributes();\n      }\n    }\n  } // Sync var value with the input elements\n\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].current.value;\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n  updateRange() {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  } // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  } // Called when,\n  // -> disabled property is modified\n\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  } // Called when,\n  // -> thumbsDisabled property is modified\n\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  } // Called when,\n  // -> min or max values are modified\n\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0].current[_] = this.options[_];\n      this.input[1].current[_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  } // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  } // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).height);\n    });\n  } // thumb position calculation depending upon the pointer position\n\n  currentPosition(e, node) {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const nodeBounds = node.getBoundingClientRect();\n    const currPos = (this.ifVerticalElse(nodeBounds.top - elementBounds.top, nodeBounds.left - elementBounds.left) + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left) * this.maxRangeWidth + this.options.min;\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n    return currPos;\n  }\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n  elementFocused(e) {\n    let repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let setFocus = false;\n    if (!this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    } // No action if both thumbs are disabled\n\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current, !repeat);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true, !repeat);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current, !repeat);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true, !repeat);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current, !repeat);\n      }\n      if (repeat) {\n        this.elementFocused(e, false);\n      }\n    }\n  }\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n  initiateThumbDrag(e, i, node) {\n    let callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n      if (callback && this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n  drag(e) {\n    if (this.isDragging) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        } // When max thumb reaches lower limit\n\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        } // When range / min thumb reaches lower limit\n\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n          this.startPos = lastPos;\n        } // When range / max thumb reaches upper limit\n\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n          this.startPos = lastPos;\n        }\n      }\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n  actualStepValue() {\n    const step = float(this.input[0].current.step);\n    return this.input[0].current.step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  } // Step value (up or down) using arrow keys\n\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0); // When min thumb reaches upper limit\n\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      } // When max thumb reaches lower limit\n\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n  render() {\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[0],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[0] : this.isComponentMounted ? this.value.min : this.options.defaultValue[0],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[1],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[1] : this.isComponentMounted ? this.value.max : this.options.defaultValue[1],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n}\n;\nvar _default = RangeSlider;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_react","_interopRequireWildcard","require","_clsx","_interopRequireDefault","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","abs","Math","float","parseFloat","MIN","MAX","ANY","VERTICAL","TABINDEX","DATA_LOWER","DATA_UPPER","DATA_ACTIVE","DATA_VERTICAL","DATA_DISABLED","RangeSlider","PureComponent","constructor","element","createRef","input","thumb","range","options","firstCall","isControlled","externalInput","isComponentMounted","lastValueProp","componentDidMount","setMinMaxProps","index","thumbWidth","thumbHeight","rangeLimits","sliderValue","maxRangeWidth","rangeWidth","isDragging","thumbDrag","startPos","reset","addNodeEventListener","current","e","elementFocused","forEach","t","i","initiateThumbDrag","which","preventDefault","stepValue","initiateRangeDrag","pointerMoveEvent","drag","pointerUpEvent","removeNodeAttribute","onThumbDragEnd","onRangeDragEnd","resizeEvent","syncThumbDimensions","updateThumbs","updateRange","document","window","componentDidUpdate","componentWillUnmount","removeNodeEventListener","props","max","min","updateOrientation","setValue","updateRangeLimits","updateDisabledState","updateThumbsDisabledState","updateTabIndexes","isNumber","n","isNaN","arguments","length","undefined","iterateMinMaxProps","fn","getSetProps","condition","expression","setNodeAttribute","node","attribute","setAttribute","removeAttribute","event","isPointerEvent","addEventListener","passive","capture","removeEventListener","fallbackToDefault","property","defaultValue","ifVerticalElse","vertical","horizontal","orientation","currentIndex","safeMinMaxValues","error","safeThumbsDisabledValues","thumbsDisabled","Array","push","newValue","forceSet","callback","currentValue","syncValues","valueSet","onInput","updateAriaValueAttributes","_","style","concat","elementBounds","getBoundingClientRect","deltaOffset","bottom","top","right","left","deltaDimension","disabled","d","currIndex","updateLimits","limit","m","getComputedStyle","width","height","currentPosition","nodeBounds","currPos","doesntHaveClassName","className","target","classList","contains","repeat","setFocus","rangeSlideDisabled","deltaMin","deltaMax","nearestThumbIndex","initiateDrag","onThumbDragStart","onRangeDragStart","lastPos","delta","lower","upper","actualStepValue","step","direction","render","createElement","id","ref","type","onChange","role","_default"],"sources":["E:/Ecommerce_Nest/Ecommerce-Website-React-main/node_modules/react-range-slider-input/dist/components/RangeSlider.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.parse-float.js\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// Aliases\nconst abs = Math.abs;\nconst float = parseFloat; // Values\n\nconst MIN = 'min';\nconst MAX = 'max';\nconst ANY = 'any';\nconst VERTICAL = 'vertical';\nconst TABINDEX = 'tabindex'; // Data Attributes\n\nconst DATA_LOWER = 'data-lower';\nconst DATA_UPPER = 'data-upper';\nconst DATA_ACTIVE = 'data-active';\nconst DATA_VERTICAL = 'data-vertical';\nconst DATA_DISABLED = 'data-disabled';\n\nclass RangeSlider extends _react.PureComponent {\n  constructor() {\n    super();\n    this.element = /*#__PURE__*/(0, _react.createRef)();\n    this.input = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.thumb = [/*#__PURE__*/(0, _react.createRef)(), /*#__PURE__*/(0, _react.createRef)()];\n    this.range = /*#__PURE__*/(0, _react.createRef)();\n    this.options = {};\n    this.firstCall = true;\n    this.isControlled = false;\n    this.externalInput = false;\n    this.isComponentMounted = false;\n    this.lastValueProp = [];\n  }\n\n  componentDidMount() {\n    if (!this.isComponentMounted) {\n      this.value = this.setMinMaxProps(); // Thumb indexes for min and max values\n      // (swapped when the thumbs cross each other)\n\n      this.index = this.setMinMaxProps(0, 1); // Thumb width & height for calculation of exact positions and sizes of horizontal thumbs and range\n\n      this.thumbWidth = this.setMinMaxProps();\n      this.thumbHeight = this.setMinMaxProps(); // Slidable range limits (when a thumb is dragged)\n\n      this.rangeLimits = this.setMinMaxProps(); // Slider value depending on the user interaction\n\n      this.sliderValue = this.setMinMaxProps(); // For dragging thumbs and range\n\n      this.maxRangeWidth = 0;\n      this.rangeWidth = 0;\n      this.isDragging = false;\n      this.thumbDrag = false;\n      this.startPos = 0; // initial\n\n      this.reset(); // Add listeners to element\n\n      this.addNodeEventListener(this.element.current, 'pointerdown', e => {\n        this.elementFocused(e);\n      }); // Add listeners to thumbs and set [data-disabled] on disabled thumbs\n\n      this.thumb.forEach((t, i) => {\n        this.addNodeEventListener(t.current, 'pointerdown', e => {\n          this.initiateThumbDrag(e, i, t.current);\n        });\n        this.addNodeEventListener(t.current, 'keydown', e => {\n          if (e.which >= 37 && e.which <= 40) {\n            e.preventDefault();\n            this.stepValue(i, e.which);\n          }\n        });\n      }); // Add listeners to range\n\n      this.addNodeEventListener(this.range.current, 'pointerdown', e => {\n        this.initiateRangeDrag(e);\n      }); // Define and add global listeners\n\n      this.pointerMoveEvent = e => {\n        this.drag(e);\n      };\n\n      this.pointerUpEvent = () => {\n        if (this.isDragging) {\n          this.removeNodeAttribute(this.thumb[0].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.thumb[1].current, DATA_ACTIVE);\n          this.removeNodeAttribute(this.range.current, DATA_ACTIVE);\n          this.isDragging = false;\n\n          if (this.thumbDrag) {\n            if (this.options.onThumbDragEnd) {\n              this.options.onThumbDragEnd();\n            }\n          } else {\n            if (this.options.onRangeDragEnd) {\n              this.options.onRangeDragEnd();\n            }\n          }\n        }\n      };\n\n      this.resizeEvent = () => {\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n      };\n\n      this.addNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n      this.addNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n      this.addNodeEventListener(window, 'resize', this.resizeEvent);\n      this.isComponentMounted = true;\n    }\n  }\n\n  componentDidUpdate() {\n    this.reset();\n  }\n\n  componentWillUnmount() {\n    // Remove global listeners\n    this.removeNodeEventListener(document, 'pointermove', this.pointerMoveEvent);\n    this.removeNodeEventListener(document, 'pointerup', this.pointerUpEvent);\n    this.removeNodeEventListener(window, 'resize', this.resizeEvent);\n    this.isComponentMounted = false;\n  }\n\n  reset() {\n    this.isControlled = !!this.props.value;\n\n    if (this.isControlled) {\n      if (this.firstCall || this.props.value !== this.lastValueProp) {\n        this.firstCall = false;\n        this.externalInput = true;\n      }\n\n      this.lastValueProp = this.props.value;\n    }\n\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.updateOrientation();\n    this.setValue('', true, false);\n    this.updateRangeLimits();\n    this.updateDisabledState();\n    this.updateThumbsDisabledState();\n    this.updateTabIndexes();\n  }\n\n  isNumber(n) {\n    // check for NaN explicitly\n    // because with NaN, the second exp. evaluates to true\n    return !isNaN(n) && +n + '' === n + '';\n  }\n\n  setMinMaxProps() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return {\n      min,\n      max\n    };\n  }\n\n  iterateMinMaxProps(fn) {\n    [MIN, MAX].forEach(fn);\n  }\n\n  getSetProps(condition, expression, fn) {\n    if (condition) {\n      return expression;\n    } else {\n      fn();\n    }\n  }\n\n  setNodeAttribute(node, attribute) {\n    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    node.setAttribute(attribute, value);\n  }\n\n  removeNodeAttribute(node, attribute) {\n    node.removeAttribute(attribute);\n  }\n\n  addNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.addEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  removeNodeEventListener(node, event, fn) {\n    let isPointerEvent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    // with options for pointer events\n    node.removeEventListener(event, fn, isPointerEvent ? {\n      passive: false,\n      capture: true\n    } : {});\n  }\n\n  fallbackToDefault(property, defaultValue) {\n    this.options[property] = this.props[property] ? this.props[property] : defaultValue;\n  }\n\n  ifVerticalElse(vertical, horizontal) {\n    return this.options.orientation === VERTICAL ? vertical : horizontal;\n  }\n\n  currentIndex(i) {\n    return i === 1 ? this.index.max : this.index.min;\n  } // Set min and max values to 1 (arbitrarily) if any of the min or max values are \"invalid\"\n  // Setting both values 1 will disable the slider\n  // Called when,\n  // -> the element is initially set\n  // -> min or max properties are modified\n\n\n  safeMinMaxValues() {\n    let error = false;\n\n    if (!this.isNumber(this.options.min) || !this.isNumber(this.options.max)) {\n      error = true;\n    }\n\n    this.options.min = error ? 1 : +this.options.min;\n    this.options.max = error ? 1 : +this.options.max;\n  } // Reframe the thumbsDisabled value if \"invalid\"\n  // Called when,\n  // -> the element is initially set\n  // -> thumbsDisabled property is modified\n\n\n  safeThumbsDisabledValues() {\n    if (this.options.thumbsDisabled instanceof Array) {\n      if (this.options.thumbsDisabled.length === 1) {\n        this.options.thumbsDisabled.push(false);\n      }\n\n      if (this.options.thumbsDisabled.length !== 1 && this.options.thumbsDisabled.length !== 2) {\n        this.options.thumbsDisabled = [false, false];\n      }\n    } else {\n      this.options.thumbsDisabled = [this.options.thumbsDisabled, this.options.thumbsDisabled];\n    } // Boolean Values\n\n\n    this.options.thumbsDisabled[0] = !!this.options.thumbsDisabled[0];\n    this.options.thumbsDisabled[1] = !!this.options.thumbsDisabled[1];\n  } // Called when,\n  // -> the element is initially set\n  // -> min, max, step or value properties are modified\n  // -> thumbs are dragged\n  // -> element is clicked upon\n  // -> an arrow key is pressed\n\n\n  setValue(newValue) {\n    let forceSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // Current value as set in the input elements\n    // which could change while changing min, max and step values\n    const currentValue = this.setMinMaxProps(this.input[0].current.value, this.input[1].current.value); // var value is synced with the values set in the input elements if no newValue is passed\n\n    newValue = newValue || currentValue;\n    this.input[this.index.min].current.value = newValue.min;\n    this.input[this.index.max].current.value = this.thumbDrag || forceSet ? newValue.max : newValue.min + this.rangeWidth;\n    this.syncValues(); // Check if the thumbs cross each other\n\n    if (this.value.min > this.value.max) {\n      // Switch thumb indexes\n      this.index.min = +!this.index.min;\n      this.index.max = +!this.index.max; // Switch thumb attributes\n\n      this.removeNodeAttribute(this.thumb[this.index.min].current, DATA_UPPER);\n      this.removeNodeAttribute(this.thumb[this.index.max].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.min].current, DATA_LOWER);\n      this.setNodeAttribute(this.thumb[this.index.max].current, DATA_UPPER); // Switch thumb drag labels\n\n      if (this.thumbDrag) {\n        this.thumbDrag = this.thumbDrag === MIN ? MAX : MIN;\n      }\n\n      this.syncValues();\n    }\n\n    this.sliderValue = forceSet ? this.value : newValue;\n    let valueSet = false;\n\n    if (currentValue.min !== this.input[0].current.value || forceSet) {\n      valueSet = true;\n    }\n\n    if (currentValue.max !== this.input[1].current.value || forceSet) {\n      valueSet = true;\n    } // Update the positions, dimensions and aria attributes everytime a value is set\n    // and call the onInput function from options (if set)\n\n\n    if (valueSet) {\n      if (callback && this.options.onInput) {\n        this.options.onInput([this.value.min, this.value.max]);\n      }\n\n      if (!this.isControlled || this.externalInput) {\n        this.externalInput = false;\n        this.syncThumbDimensions();\n        this.updateThumbs();\n        this.updateRange();\n        this.updateAriaValueAttributes();\n      }\n    }\n  } // Sync var value with the input elements\n\n\n  syncValues() {\n    this.iterateMinMaxProps(_ => {\n      this.value[_] = +this.input[this.index[_]].current.value;\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateThumbs() {\n    this.iterateMinMaxProps(_ => {\n      this.thumb[this.index[_]].current.style[this.ifVerticalElse('top', 'left')] = \"calc(\".concat((this.value[_] - this.options.min) / this.maxRangeWidth * 100, \"% + \").concat((0.5 - (this.value[_] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[_], \"px)\");\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n  // -> window is resized\n\n\n  updateRange() {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const deltaOffset = (0.5 - (this.value.min - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).min / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    const deltaDimension = (0.5 - (this.value.max - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth).max / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left);\n    this.range.current.style[this.ifVerticalElse('top', 'left')] = \"\".concat(((this.value.min - this.options.min) / this.maxRangeWidth + deltaOffset) * 100, \"%\");\n    this.range.current.style[this.ifVerticalElse('height', 'width')] = \"\".concat(((this.value.max - this.options.min) / this.maxRangeWidth - (this.value.min - this.options.min) / this.maxRangeWidth - deltaOffset + deltaDimension) * 100, \"%\");\n  }\n\n  updateRangeLimits() {\n    this.iterateMinMaxProps((_, i) => {\n      this.rangeLimits[_] = this.options.thumbsDisabled[i] ? this.value[_] : this.options[_];\n    });\n  } // Called when,\n  // -> thumbs are initially set\n  // -> thumbs are disabled / enabled\n\n\n  updateTabIndexes() {\n    this.iterateMinMaxProps((_, i) => {\n      if (!this.options.disabled && !this.options.thumbsDisabled[i]) {\n        this.setNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX, 0);\n      } else {\n        this.removeNodeAttribute(this.thumb[this.currentIndex(i)].current, TABINDEX);\n      }\n    });\n  } // Called when,\n  // -> setValue is called and a value is set\n\n\n  updateAriaValueAttributes() {\n    this.iterateMinMaxProps(_ => {\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemin', this.options.min);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuemax', this.options.max);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuenow', this.value[_]);\n      this.setNodeAttribute(this.thumb[this.index[_]].current, 'aria-valuetext', this.value[_]);\n    });\n  } // Called when,\n  // -> disabled property is modified\n\n\n  updateDisabledState() {\n    if (this.options.disabled) {\n      this.setNodeAttribute(this.element.current, DATA_DISABLED);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_DISABLED);\n    }\n  } // Called when,\n  // -> thumbsDisabled property is modified\n\n\n  updateThumbsDisabledState() {\n    this.options.thumbsDisabled.forEach((d, i) => {\n      const currIndex = this.currentIndex(i);\n\n      if (d) {\n        this.setNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', true);\n      } else {\n        this.removeNodeAttribute(this.thumb[currIndex].current, DATA_DISABLED);\n        this.setNodeAttribute(this.thumb[currIndex].current, 'aria-disabled', false);\n      }\n    });\n  } // Called when,\n  // -> min or max values are modified\n\n\n  updateLimits(limit) {\n    let m = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.options[limit] = m;\n    this.safeMinMaxValues();\n    this.iterateMinMaxProps(_ => {\n      this.input[0].current[_] = this.options[_];\n      this.input[1].current[_] = this.options[_];\n    });\n    this.maxRangeWidth = this.options.max - this.options.min;\n    this.setValue('', true);\n    this.updateRangeLimits();\n  } // Called when,\n  // -> the element is initially set\n  // -> orientation property is modified\n\n\n  updateOrientation() {\n    if (this.options.orientation === VERTICAL) {\n      this.setNodeAttribute(this.element.current, DATA_VERTICAL);\n    } else {\n      this.removeNodeAttribute(this.element.current, DATA_VERTICAL);\n    }\n\n    this.range.current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.range.current.style[this.ifVerticalElse('width', 'height')] = '';\n    this.thumb[0].current.style[this.ifVerticalElse('left', 'top')] = '';\n    this.thumb[1].current.style[this.ifVerticalElse('left', 'top')] = '';\n  } // thumb width & height values are to be synced with the CSS values for correct calculation of\n  // thumb position and range width & position\n  // Called when,\n  // -> setValue is called and a value is set (called before updateThumbs() and updateRange())\n  // -> thumb / range drag is initiated\n  // -> window is resized\n\n\n  syncThumbDimensions() {\n    this.iterateMinMaxProps(_ => {\n      this.thumbWidth[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).width);\n      this.thumbHeight[_] = float(window.getComputedStyle(this.thumb[this.index[_]].current).height);\n    });\n  } // thumb position calculation depending upon the pointer position\n\n\n  currentPosition(e, node) {\n    const elementBounds = this.element.current.getBoundingClientRect();\n    const nodeBounds = node.getBoundingClientRect();\n    const currPos = (this.ifVerticalElse(nodeBounds.top - elementBounds.top, nodeBounds.left - elementBounds.left) + (e[\"client\".concat(this.ifVerticalElse('Y', 'X'))] - node.getBoundingClientRect()[this.ifVerticalElse('top', 'left')]) - (this.thumbDrag ? (0.5 - (this.value[this.thumbDrag] - this.options.min) / this.maxRangeWidth) * this.ifVerticalElse(this.thumbHeight, this.thumbWidth)[this.thumbDrag] : 0)) / this.ifVerticalElse(elementBounds.bottom - elementBounds.top, elementBounds.right - elementBounds.left) * this.maxRangeWidth + this.options.min;\n\n    if (currPos < this.options.min) {\n      return this.options.min;\n    }\n\n    if (currPos > this.options.max) {\n      return this.options.max;\n    }\n\n    return currPos;\n  }\n\n  doesntHaveClassName(e, className) {\n    return !e.target.classList.contains(className);\n  }\n\n  elementFocused(e) {\n    let repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let setFocus = false;\n\n    if (!this.options.disabled && (this.doesntHaveClassName(e, 'range-slider__thumb') && this.doesntHaveClassName(e, 'range-slider__range') || this.options.rangeSlideDisabled && this.doesntHaveClassName(e, 'range-slider__thumb'))) {\n      setFocus = true;\n    } // No action if both thumbs are disabled\n\n\n    if (setFocus && this.options.thumbsDisabled[0] && this.options.thumbsDisabled[1]) {\n      setFocus = false;\n    }\n\n    if (setFocus) {\n      const currPos = this.currentPosition(e, this.range.current);\n      const deltaMin = abs(this.value.min - currPos);\n      const deltaMax = abs(this.value.max - currPos);\n\n      if (this.options.thumbsDisabled[0]) {\n        if (currPos >= this.value.min) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n          this.initiateThumbDrag(e, this.index.max, this.thumb[this.index.max].current, !repeat);\n        }\n      } else if (this.options.thumbsDisabled[1]) {\n        if (currPos <= this.value.max) {\n          this.setValue(this.setMinMaxProps(currPos, this.value.max), true, !repeat);\n          this.initiateThumbDrag(e, this.index.min, this.thumb[this.index.min].current, !repeat);\n        }\n      } else {\n        let nearestThumbIndex = this.index.max;\n\n        if (deltaMin === deltaMax) {\n          this.setValue(this.setMinMaxProps(this.value.min, currPos), true, !repeat);\n        } else {\n          this.setValue(this.setMinMaxProps(deltaMin < deltaMax ? currPos : this.value.min, deltaMax < deltaMin ? currPos : this.value.max), true, !repeat);\n          nearestThumbIndex = deltaMin < deltaMax ? this.index.min : this.index.max;\n        }\n\n        this.initiateThumbDrag(e, nearestThumbIndex, this.thumb[nearestThumbIndex].current, !repeat);\n      }\n\n      if (repeat) {\n        this.elementFocused(e, false);\n      }\n    }\n  }\n\n  initiateDrag(e, node) {\n    this.syncThumbDimensions();\n    this.setNodeAttribute(node, DATA_ACTIVE);\n    this.startPos = this.currentPosition(e, node);\n    this.isDragging = true;\n  }\n\n  initiateThumbDrag(e, i, node) {\n    let callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      this.initiateDrag(e, node);\n      this.thumbDrag = this.index.min === i ? MIN : MAX;\n\n      if (callback && this.options.onThumbDragStart) {\n        this.options.onThumbDragStart();\n      }\n    }\n  }\n\n  initiateRangeDrag(e) {\n    if (!this.options.disabled && !this.options.rangeSlideDisabled) {\n      this.initiateDrag(e, this.range.current);\n      this.rangeWidth = this.value.max - this.value.min;\n      this.thumbDrag = false;\n\n      if (this.options.onRangeDragStart) {\n        this.options.onRangeDragStart();\n      }\n    }\n  }\n\n  drag(e) {\n    if (this.isDragging) {\n      const lastPos = this.currentPosition(e, this.range.current);\n      const delta = lastPos - this.startPos;\n      let min = this.value.min;\n      let max = this.value.max;\n      const lower = this.thumbDrag ? this.rangeLimits.min : this.options.min;\n      const upper = this.thumbDrag ? this.rangeLimits.max : this.options.max;\n\n      if (!this.thumbDrag || this.thumbDrag === MIN) {\n        min = this.thumbDrag ? lastPos : this.sliderValue.min + delta;\n      }\n\n      if (!this.thumbDrag || this.thumbDrag === MAX) {\n        max = this.thumbDrag ? lastPos : this.sliderValue.max + delta;\n      }\n\n      if (min >= lower && min <= upper && max >= lower && max <= upper) {\n        this.setValue({\n          min,\n          max\n        });\n        this.startPos = lastPos;\n      } else {\n        // When min thumb reaches upper limit\n        if (min > upper && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(upper, upper));\n          this.startPos = lastPos;\n        } // When max thumb reaches lower limit\n\n\n        if (max < lower && this.thumbDrag) {\n          this.setValue(this.setMinMaxProps(lower, lower));\n          this.startPos = lastPos;\n        } // When range / min thumb reaches lower limit\n\n\n        if (min < lower) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(lower, this.value.max - this.value.min + lower));\n          } else {\n            this.setValue(this.setMinMaxProps(lower, this.value.max));\n          }\n\n          this.startPos = lastPos;\n        } // When range / max thumb reaches upper limit\n\n\n        if (max > upper) {\n          if (!this.thumbDrag) {\n            this.setValue(this.setMinMaxProps(this.value.min - this.value.max + upper, upper));\n          } else {\n            this.setValue(this.setMinMaxProps(this.value.min, upper));\n          }\n\n          this.startPos = lastPos;\n        }\n      }\n\n      if (!this.thumbDrag) {\n        this.updateRangeLimits();\n      }\n    }\n  }\n\n  actualStepValue() {\n    const step = float(this.input[0].current.step);\n    return this.input[0].current.step === ANY ? ANY : step === 0 || isNaN(step) ? 1 : step;\n  } // Step value (up or down) using arrow keys\n\n\n  stepValue(i, key) {\n    const direction = (key === 37 || key === 40 ? -1 : 1) * this.ifVerticalElse(-1, 1);\n\n    if (!this.options.disabled && !this.options.thumbsDisabled[this.currentIndex(i)]) {\n      let step = this.actualStepValue();\n      step = step === ANY ? 1 : step;\n      let min = this.value.min + step * (this.index.min === i ? direction : 0);\n      let max = this.value.max + step * (this.index.max === i ? direction : 0); // When min thumb reaches upper limit\n\n      if (min > this.rangeLimits.max) {\n        min = this.rangeLimits.max;\n      } // When max thumb reaches lower limit\n\n\n      if (max < this.rangeLimits.min) {\n        max = this.rangeLimits.min;\n      }\n\n      this.setValue({\n        min,\n        max\n      }, true);\n    }\n  }\n\n  render() {\n    // Set options to default values if not set\n    this.fallbackToDefault('rangeSlideDisabled', false);\n    this.fallbackToDefault('thumbsDisabled', [false, false]);\n    this.fallbackToDefault('orientation', 'horizontal');\n    this.fallbackToDefault('defaultValue', [25, 75]);\n    this.fallbackToDefault('disabled', false);\n    this.fallbackToDefault('onThumbDragStart', false);\n    this.fallbackToDefault('onRangeDragStart', false);\n    this.fallbackToDefault('onThumbDragEnd', false);\n    this.fallbackToDefault('onRangeDragEnd', false);\n    this.fallbackToDefault('onInput', false);\n    this.fallbackToDefault('step', 1);\n    this.fallbackToDefault('min', 0);\n    this.fallbackToDefault('max', 100);\n\n    if (this.props.value) {\n      this.fallbackToDefault('value', [25, 75]);\n    }\n\n    this.safeMinMaxValues();\n    this.safeThumbsDisabledValues();\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"data-testid\": \"element\",\n      id: this.props.id,\n      ref: this.element,\n      className: (0, _clsx.default)('range-slider', this.props.className)\n    }, /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[0],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[0] : this.isComponentMounted ? this.value.min : this.options.defaultValue[0],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"input\", {\n      ref: this.input[1],\n      type: \"range\",\n      min: this.options.min,\n      max: this.options.max,\n      step: this.options.step,\n      value: this.props.value ? this.options.value[1] : this.isComponentMounted ? this.value.max : this.options.defaultValue[1],\n      onChange: () => {},\n      disabled: true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[0],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-lower\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.thumb[1],\n      role: \"slider\",\n      className: \"range-slider__thumb\",\n      \"data-upper\": true\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      ref: this.range,\n      className: \"range-slider__range\"\n    }));\n  }\n\n}\n\n;\nvar _default = RangeSlider;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}