{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { DropdownActionTypes } from './useDropdown.types';\nimport { dropdownReducer } from './dropdownReducer';\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useDropdown API](https://mui.com/base-ui/react-menu/hooks-api/#use-dropdown)\n */\nexport function useDropdown(parameters = {}) {\n  const {\n    defaultOpen,\n    onOpenChange,\n    open: openProp\n  } = parameters;\n  const [popupId, setPopupId] = React.useState('');\n  const [triggerElement, setTriggerElement] = React.useState(null);\n  const lastActionType = React.useRef(null);\n  const handleStateChange = React.useCallback((event, field, value, reason) => {\n    if (field === 'open') {\n      onOpenChange == null || onOpenChange(event, value);\n    }\n    lastActionType.current = reason;\n  }, [onOpenChange]);\n  const controlledProps = React.useMemo(() => openProp !== undefined ? {\n    open: openProp\n  } : {}, [openProp]);\n  const [state, dispatch] = useControllableReducer({\n    controlledProps,\n    initialState: defaultOpen ? {\n      open: true\n    } : {\n      open: false\n    },\n    onStateChange: handleStateChange,\n    reducer: dropdownReducer\n  });\n  React.useEffect(() => {\n    if (!state.open && lastActionType.current !== null && lastActionType.current !== DropdownActionTypes.blur) {\n      triggerElement == null || triggerElement.focus();\n    }\n  }, [state.open, triggerElement]);\n  const contextValue = {\n    state,\n    dispatch,\n    popupId,\n    registerPopup: setPopupId,\n    registerTrigger: setTriggerElement,\n    triggerElement\n  };\n  return {\n    contextValue,\n    open: state.open\n  };\n}","map":{"version":3,"names":["React","useControllableReducer","DropdownActionTypes","dropdownReducer","useDropdown","parameters","defaultOpen","onOpenChange","open","openProp","popupId","setPopupId","useState","triggerElement","setTriggerElement","lastActionType","useRef","handleStateChange","useCallback","event","field","value","reason","current","controlledProps","useMemo","undefined","state","dispatch","initialState","onStateChange","reducer","useEffect","blur","focus","contextValue","registerPopup","registerTrigger"],"sources":["E:/Ecommerce_Nest/Ecommerce-Website-React-main/node_modules/@mui/base/useDropdown/useDropdown.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { DropdownActionTypes } from './useDropdown.types';\nimport { dropdownReducer } from './dropdownReducer';\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useDropdown API](https://mui.com/base-ui/react-menu/hooks-api/#use-dropdown)\n */\nexport function useDropdown(parameters = {}) {\n  const {\n    defaultOpen,\n    onOpenChange,\n    open: openProp\n  } = parameters;\n  const [popupId, setPopupId] = React.useState('');\n  const [triggerElement, setTriggerElement] = React.useState(null);\n  const lastActionType = React.useRef(null);\n  const handleStateChange = React.useCallback((event, field, value, reason) => {\n    if (field === 'open') {\n      onOpenChange == null || onOpenChange(event, value);\n    }\n    lastActionType.current = reason;\n  }, [onOpenChange]);\n  const controlledProps = React.useMemo(() => openProp !== undefined ? {\n    open: openProp\n  } : {}, [openProp]);\n  const [state, dispatch] = useControllableReducer({\n    controlledProps,\n    initialState: defaultOpen ? {\n      open: true\n    } : {\n      open: false\n    },\n    onStateChange: handleStateChange,\n    reducer: dropdownReducer\n  });\n  React.useEffect(() => {\n    if (!state.open && lastActionType.current !== null && lastActionType.current !== DropdownActionTypes.blur) {\n      triggerElement == null || triggerElement.focus();\n    }\n  }, [state.open, triggerElement]);\n  const contextValue = {\n    state,\n    dispatch,\n    popupId,\n    registerPopup: setPopupId,\n    registerTrigger: setTriggerElement,\n    triggerElement\n  };\n  return {\n    contextValue,\n    open: state.open\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,sBAAsB,QAAQ,iCAAiC;AACxE,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,eAAe,QAAQ,mBAAmB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE;EAC3C,MAAM;IACJC,WAAW;IACXC,YAAY;IACZC,IAAI,EAAEC;EACR,CAAC,GAAGJ,UAAU;EACd,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,KAAK,CAACY,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAMG,cAAc,GAAGf,KAAK,CAACgB,MAAM,CAAC,IAAI,CAAC;EACzC,MAAMC,iBAAiB,GAAGjB,KAAK,CAACkB,WAAW,CAAC,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,MAAM,KAAK;IAC3E,IAAIF,KAAK,KAAK,MAAM,EAAE;MACpBb,YAAY,IAAI,IAAI,IAAIA,YAAY,CAACY,KAAK,EAAEE,KAAK,CAAC;IACpD;IACAN,cAAc,CAACQ,OAAO,GAAGD,MAAM;EACjC,CAAC,EAAE,CAACf,YAAY,CAAC,CAAC;EAClB,MAAMiB,eAAe,GAAGxB,KAAK,CAACyB,OAAO,CAAC,MAAMhB,QAAQ,KAAKiB,SAAS,GAAG;IACnElB,IAAI,EAAEC;EACR,CAAC,GAAG,CAAC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACnB,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,sBAAsB,CAAC;IAC/CuB,eAAe;IACfK,YAAY,EAAEvB,WAAW,GAAG;MAC1BE,IAAI,EAAE;IACR,CAAC,GAAG;MACFA,IAAI,EAAE;IACR,CAAC;IACDsB,aAAa,EAAEb,iBAAiB;IAChCc,OAAO,EAAE5B;EACX,CAAC,CAAC;EACFH,KAAK,CAACgC,SAAS,CAAC,MAAM;IACpB,IAAI,CAACL,KAAK,CAACnB,IAAI,IAAIO,cAAc,CAACQ,OAAO,KAAK,IAAI,IAAIR,cAAc,CAACQ,OAAO,KAAKrB,mBAAmB,CAAC+B,IAAI,EAAE;MACzGpB,cAAc,IAAI,IAAI,IAAIA,cAAc,CAACqB,KAAK,CAAC,CAAC;IAClD;EACF,CAAC,EAAE,CAACP,KAAK,CAACnB,IAAI,EAAEK,cAAc,CAAC,CAAC;EAChC,MAAMsB,YAAY,GAAG;IACnBR,KAAK;IACLC,QAAQ;IACRlB,OAAO;IACP0B,aAAa,EAAEzB,UAAU;IACzB0B,eAAe,EAAEvB,iBAAiB;IAClCD;EACF,CAAC;EACD,OAAO;IACLsB,YAAY;IACZ3B,IAAI,EAAEmB,KAAK,CAACnB;EACd,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}