{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport Rating from '@mui/material/Rating';\nimport { Button } from '@mui/material';\nimport QuantityBox from '../../components/quantityBox';\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\nimport { MyContext } from '../../App';\n// import { loadStripe } from '@stripe/stripe-js';\n\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// import { loadStripe } from '@stripe/stripe-js';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const context = useContext(MyContext);\n  const history = useNavigate();\n  useEffect(() => {\n    if (context.isLogin !== \"true\") {\n      history('/');\n    }\n    context.setCartItems(context.cartItems);\n  }, []);\n  const deleteItem = async id => {\n    // const response = await axios.delete(`http://localhost:5000/cartItems/${id}`);\n    // if (response !== null) {\n    //     context.getCartData(\"http://localhost:5000/cartItems\");\n    //     context.removeItemsFromCart(id);\n    // }\n  };\n  const emptyCart = () => {\n    let response = null;\n    // cartItems.length !== 0 &&\n    //     cartItems.map((item) => {\n    //         response = axios.delete(`http://localhost:5000/cartItems/${parseInt(item.id)}`);\n    //     })\n    // if (response !== null) {\n    //     context.getCartData(\"http://localhost:5000/cartItems\");\n    // }\n\n    // context.emptyCart();\n  };\n\n  const updateCart = items => {\n    //console.log(items)\n    context.setCartItems(items);\n  };\n\n  // const makePayment = async () => {\n  //     const stripe = await loadStripe('pk_test_51OSafaSEi0nlwkT6fE5zbDHnNLjJoQ6INy7jZmoAycZjR0uPPxQ7Fv7eCKLfBELmCJ3vJK1pVWmMLC9c8X7xJTYK00l4lDuWMG');\n\n  //     const body = {\n  //         products: cartItems\n  //     }\n\n  //     const headers = {\n  //         \"Content-Type\": \"application/json\"\n  //     }\n\n  //     const response = await fetch(\"http://localhost:7000/api/create-checkout-session\", {\n  //         method: 'POST',\n  //         headers: headers,\n  //         body: JSON.stringify(body)\n  //     })\n\n  //     const session = await response.json();\n\n  //     const result = stripe.redirectToCheckout({\n  //         sessionId: session.id\n  //     })\n\n  //     if (result.error) {\n  //         console.log(result.error)\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Cart, \"zLobZ9uDppjLcxEN2X+n+x8QcuY=\", false, function () {\n  return [useNavigate];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Link","DeleteOutlineOutlinedIcon","Rating","Button","QuantityBox","KeyboardBackspaceIcon","MyContext","axios","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","context","history","isLogin","deleteItem","id","emptyCart","response","updateCart","items","_c","$RefreshReg$"],"sources":["E:/Ecommerce_Nest/Ecommerce-Website-React-main/src/pages/cart/index.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport Rating from '@mui/material/Rating';\r\nimport { Button } from '@mui/material';\r\nimport QuantityBox from '../../components/quantityBox';\r\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\r\nimport { MyContext } from '../../App';\r\n// import { loadStripe } from '@stripe/stripe-js';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// import { loadStripe } from '@stripe/stripe-js';\r\n\r\nconst Cart = () => {\r\n    const [cartItems, setCartItems] = useState([])\r\n    const context = useContext(MyContext);\r\n    const history = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (context.isLogin !== \"true\") {\r\n            history('/');\r\n        } \r\n       \r\n\r\n        context.setCartItems(context.cartItems)\r\n\r\n    }, [])\r\n\r\n    \r\n\r\n\r\n    const deleteItem = async (id) => {\r\n        // const response = await axios.delete(`http://localhost:5000/cartItems/${id}`);\r\n        // if (response !== null) {\r\n        //     context.getCartData(\"http://localhost:5000/cartItems\");\r\n        //     context.removeItemsFromCart(id);\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    const emptyCart = () => {\r\n        let response = null;\r\n        // cartItems.length !== 0 &&\r\n        //     cartItems.map((item) => {\r\n        //         response = axios.delete(`http://localhost:5000/cartItems/${parseInt(item.id)}`);\r\n        //     })\r\n        // if (response !== null) {\r\n        //     context.getCartData(\"http://localhost:5000/cartItems\");\r\n        // }\r\n\r\n        // context.emptyCart();\r\n    }\r\n\r\n\r\n    const updateCart = (items) => {\r\n        //console.log(items)\r\n        context.setCartItems(items)\r\n    }\r\n\r\n\r\n    // const makePayment = async () => {\r\n    //     const stripe = await loadStripe('pk_test_51OSafaSEi0nlwkT6fE5zbDHnNLjJoQ6INy7jZmoAycZjR0uPPxQ7Fv7eCKLfBELmCJ3vJK1pVWmMLC9c8X7xJTYK00l4lDuWMG');\r\n\r\n    //     const body = {\r\n    //         products: cartItems\r\n    //     }\r\n\r\n    //     const headers = {\r\n    //         \"Content-Type\": \"application/json\"\r\n    //     }\r\n\r\n    //     const response = await fetch(\"http://localhost:7000/api/create-checkout-session\", {\r\n    //         method: 'POST',\r\n    //         headers: headers,\r\n    //         body: JSON.stringify(body)\r\n    //     })\r\n\r\n    //     const session = await response.json();\r\n\r\n    //     const result = stripe.redirectToCheckout({\r\n    //         sessionId: session.id\r\n    //     })\r\n\r\n    //     if (result.error) {\r\n    //         console.log(result.error)\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,yBAAyB,MAAM,2CAA2C;AACjF,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,SAASC,SAAS,QAAQ,WAAW;AACrC;;AAEA,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMmB,OAAO,GAAGpB,UAAU,CAACS,SAAS,CAAC;EACrC,MAAMY,OAAO,GAAGV,WAAW,CAAC,CAAC;EAE7BT,SAAS,CAAC,MAAM;IACZ,IAAIkB,OAAO,CAACE,OAAO,KAAK,MAAM,EAAE;MAC5BD,OAAO,CAAC,GAAG,CAAC;IAChB;IAGAD,OAAO,CAACD,YAAY,CAACC,OAAO,CAACF,SAAS,CAAC;EAE3C,CAAC,EAAE,EAAE,CAAC;EAKN,MAAMK,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B;IACA;IACA;IACA;IACA;EAAA,CACH;EAID,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIC,QAAQ,GAAG,IAAI;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;EACJ,CAAC;;EAGD,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC1B;IACAR,OAAO,CAACD,YAAY,CAACS,KAAK,CAAC;EAC/B,CAAC;;EAGD;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA,oBACIb,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEX,CAAC;AAAAI,EAAA,CAlFKD,IAAI;EAAA,QAGUL,WAAW;AAAA;AAAAkB,EAAA,GAHzBb,IAAI;AAoFV,eAAeA,IAAI;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}