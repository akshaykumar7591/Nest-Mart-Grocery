{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useForcedRerendering } from '../utils/useForcedRerendering';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It provides information about the item's state (selected, highlighted) and\n * handles the item's mouse events.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item,\n    rootRef: externalRef\n  } = parameters;\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, externalRef);\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const rerender = useForcedRerendering();\n  useEnhancedEffect(() => {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(() => {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onC;\n    (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onM;\n    (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      ref: handleRef,\n      tabIndex\n    });\n  };\n  return {\n    getRootProps,\n    highlighted,\n    rootRef: handleRef,\n    selected\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","useForcedRerendering","extractEventHandlers","ListActionTypes","ListContext","useListItem","parameters","handlePointerOverEvents","item","rootRef","externalRef","itemRef","useRef","handleRef","listContext","useContext","Error","dispatch","getItemState","registerHighlightChangeHandler","registerSelectionChangeHandler","highlighted","selected","focusable","rerender","updateHighlightedState","highlightedItem","updateSelectedState","selectedItems","includes","createHandleClick","useCallback","externalHandlers","event","_externalHandlers$onC","onClick","call","defaultPrevented","type","itemClick","createHandlePointerOver","_externalHandlers$onM","onMouseOver","itemHover","tabIndex","getRootProps","externalProps","externalEventHandlers","onPointerOver","undefined","ref"],"sources":["E:/Ecommerce_Nest/Ecommerce-Website-React-main/node_modules/@mui/base/useList/useListItem.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useForcedRerendering } from '../utils/useForcedRerendering';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It provides information about the item's state (selected, highlighted) and\n * handles the item's mouse events.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item,\n    rootRef: externalRef\n  } = parameters;\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, externalRef);\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const rerender = useForcedRerendering();\n  useEnhancedEffect(() => {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(() => {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onC;\n    (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onM;\n    (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      ref: handleRef,\n      tabIndex\n    });\n  };\n  return {\n    getRootProps,\n    highlighted,\n    rootRef: handleRef,\n    selected\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,IAAIC,UAAU,EAAEC,0BAA0B,IAAIC,iBAAiB,QAAQ,YAAY;AAC/G,SAASC,oBAAoB,QAAQ,+BAA+B;AACpE,SAASC,oBAAoB,QAAQ,+BAA+B;AACpE,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,UAAU,EAAE;EACtC,MAAM;IACJC,uBAAuB,GAAG,KAAK;IAC/BC,IAAI;IACJC,OAAO,EAAEC;EACX,CAAC,GAAGJ,UAAU;EACd,MAAMK,OAAO,GAAGf,KAAK,CAACgB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMC,SAAS,GAAGf,UAAU,CAACa,OAAO,EAAED,WAAW,CAAC;EAClD,MAAMI,WAAW,GAAGlB,KAAK,CAACmB,UAAU,CAACX,WAAW,CAAC;EACjD,IAAI,CAACU,WAAW,EAAE;IAChB,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,8BAA8B;IAC9BC;EACF,CAAC,GAAGN,WAAW;EACf,MAAM;IACJO,WAAW;IACXC,QAAQ;IACRC;EACF,CAAC,GAAGL,YAAY,CAACV,IAAI,CAAC;EACtB,MAAMgB,QAAQ,GAAGvB,oBAAoB,CAAC,CAAC;EACvCD,iBAAiB,CAAC,MAAM;IACtB,SAASyB,sBAAsBA,CAACC,eAAe,EAAE;MAC/C,IAAIA,eAAe,KAAKlB,IAAI,IAAI,CAACa,WAAW,EAAE;QAC5CG,QAAQ,CAAC,CAAC;MACZ,CAAC,MAAM,IAAIE,eAAe,KAAKlB,IAAI,IAAIa,WAAW,EAAE;QAClDG,QAAQ,CAAC,CAAC;MACZ;IACF;IACA,OAAOL,8BAA8B,CAACM,sBAAsB,CAAC;EAC/D,CAAC,CAAC;EACFzB,iBAAiB,CAAC,MAAM;IACtB,SAAS2B,mBAAmBA,CAACC,aAAa,EAAE;MAC1C,IAAI,CAACN,QAAQ,EAAE;QACb,IAAIM,aAAa,CAACC,QAAQ,CAACrB,IAAI,CAAC,EAAE;UAChCgB,QAAQ,CAAC,CAAC;QACZ;MACF,CAAC,MAAM,IAAI,CAACI,aAAa,CAACC,QAAQ,CAACrB,IAAI,CAAC,EAAE;QACxCgB,QAAQ,CAAC,CAAC;MACZ;IACF;IACA,OAAOJ,8BAA8B,CAACO,mBAAmB,CAAC;EAC5D,CAAC,EAAE,CAACP,8BAA8B,EAAEI,QAAQ,EAAEF,QAAQ,EAAEd,IAAI,CAAC,CAAC;EAC9D,MAAMsB,iBAAiB,GAAGlC,KAAK,CAACmC,WAAW,CAACC,gBAAgB,IAAIC,KAAK,IAAI;IACvE,IAAIC,qBAAqB;IACzB,CAACA,qBAAqB,GAAGF,gBAAgB,CAACG,OAAO,KAAK,IAAI,IAAID,qBAAqB,CAACE,IAAI,CAACJ,gBAAgB,EAAEC,KAAK,CAAC;IACjH,IAAIA,KAAK,CAACI,gBAAgB,EAAE;MAC1B;IACF;IACApB,QAAQ,CAAC;MACPqB,IAAI,EAAEnC,eAAe,CAACoC,SAAS;MAC/B/B,IAAI;MACJyB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAAChB,QAAQ,EAAET,IAAI,CAAC,CAAC;EACpB,MAAMgC,uBAAuB,GAAG5C,KAAK,CAACmC,WAAW,CAACC,gBAAgB,IAAIC,KAAK,IAAI;IAC7E,IAAIQ,qBAAqB;IACzB,CAACA,qBAAqB,GAAGT,gBAAgB,CAACU,WAAW,KAAK,IAAI,IAAID,qBAAqB,CAACL,IAAI,CAACJ,gBAAgB,EAAEC,KAAK,CAAC;IACrH,IAAIA,KAAK,CAACI,gBAAgB,EAAE;MAC1B;IACF;IACApB,QAAQ,CAAC;MACPqB,IAAI,EAAEnC,eAAe,CAACwC,SAAS;MAC/BnC,IAAI;MACJyB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAAChB,QAAQ,EAAET,IAAI,CAAC,CAAC;EACpB,IAAIoC,QAAQ;EACZ,IAAIrB,SAAS,EAAE;IACbqB,QAAQ,GAAGvB,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;EACjC;EACA,MAAMwB,YAAY,GAAGA,CAACC,aAAa,GAAG,CAAC,CAAC,KAAK;IAC3C,MAAMC,qBAAqB,GAAG7C,oBAAoB,CAAC4C,aAAa,CAAC;IACjE,OAAOnD,QAAQ,CAAC,CAAC,CAAC,EAAEmD,aAAa,EAAE;MACjCX,OAAO,EAAEL,iBAAiB,CAACiB,qBAAqB,CAAC;MACjDC,aAAa,EAAEzC,uBAAuB,GAAGiC,uBAAuB,CAACO,qBAAqB,CAAC,GAAGE,SAAS;MACnGC,GAAG,EAAErC,SAAS;MACd+B;IACF,CAAC,CAAC;EACJ,CAAC;EACD,OAAO;IACLC,YAAY;IACZxB,WAAW;IACXZ,OAAO,EAAEI,SAAS;IAClBS;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}